package com.example.author;

/**
 * Data Transfer Object (DTO) for creating new authors.
 * 
 * <p>This class demonstrates the DTO pattern in Spring Boot applications:</p>
 * <ul>
 *   <li><strong>Input DTO</strong>: This class represents the data structure for creating new authors.
 *       It contains only the fields that are needed for the creation operation.</li>
 *   <li><strong>JSON Deserialization</strong>: When a POST request is made to create an author, Spring
 *       will automatically deserialize the JSON request body into an instance of this class.</li>
 *   <li><strong>Validation Boundary</strong>: This class can be used as a boundary for input validation,
 *       ensuring that only valid data reaches the service layer.</li>
 * </ul>
 * 
 * <p>Key characteristics of this DTO:</p>
 * <ul>
 *   <li><strong>No ID field</strong>: The ID is generated by the database, so it's not included in the request</li>
 *   <li><strong>JavaBean convention</strong>: Follows the JavaBean pattern with private fields and public getters/setters</li>
 *   <li><strong>Simple structure</strong>: Contains only the essential fields needed for author creation</li>
 *   <li><strong>API contract</strong>: Defines the expected structure of JSON requests for creating authors</li>
 * </ul>
 * 
 * <p>Example JSON request body:</p>
 * <pre>
 * {
 *   "firstName": "John",
 *   "lastName": "Doe",
 *   "email": "john.doe@example.com"
 * }
 * </pre>
 * 
 * <p>This DTO is used in the AuthorController's createAuthor method and is converted to an Author entity
 * by the AuthorMapper before being persisted to the database.</p>
 * 
 * @author Tutorial Application
 * @version 1.0
 * @since Spring Boot 3.x
 * @see AuthorController#createAuthor(CreateAuthorRequest)
 * @see AuthorMapper#toEntity(CreateAuthorRequest)
 */
public class CreateAuthorRequest {
    
    /**
     * The first name of the author to be created.
     * 
     * <p>This field will be automatically populated from the JSON request body
     * when Spring deserializes the HTTP request.</p>
     */
    private String firstName;
    
    /**
     * The last name of the author to be created.
     * 
     * <p>This field will be automatically populated from the JSON request body
     * when Spring deserializes the HTTP request.</p>
     */
    private String lastName;
    
    /**
     * The email address of the author to be created.
     * 
     * <p>This field will be automatically populated from the JSON request body
     * when Spring deserializes the HTTP request.</p>
     */
    private String email;

    /**
     * Gets the first name of the author.
     * 
     * @return The author's first name
     */
    public String getFirstName() {
        return firstName;
    }

    /**
     * Sets the first name of the author.
     * 
     * <p>This setter is called by Spring during JSON deserialization to populate
     * the field from the request body.</p>
     * 
     * @param firstName The author's first name
     */
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    /**
     * Gets the last name of the author.
     * 
     * @return The author's last name
     */
    public String getLastName() {
        return lastName;
    }

    /**
     * Sets the last name of the author.
     * 
     * <p>This setter is called by Spring during JSON deserialization to populate
     * the field from the request body.</p>
     * 
     * @param lastName The author's last name
     */
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    /**
     * Gets the email address of the author.
     * 
     * @return The author's email address
     */
    public String getEmail() {
        return email;
    }

    /**
     * Sets the email address of the author.
     * 
     * <p>This setter is called by Spring during JSON deserialization to populate
     * the field from the request body.</p>
     * 
     * @param email The author's email address
     */
    public void setEmail(String email) {
        this.email = email;
    }
}
